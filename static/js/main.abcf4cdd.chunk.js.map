{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","HandleNameInput","e","setState","target","value","HandleNumberInput","FormSubmit","preventDefault","props","onSubmit","this","type","onChange","pattern","title","required","React","Component","Filter","onChangeFilter","filter","ContactList","contacts","onClickDelete","filteredContacts","contact","toLowerCase","includes","length","map","id","onClick","App","HandleSearchContactByName","HandleFormSubmit","some","alert","push","uuidv4","HandleClickDelete","forEach","index","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abcf4cdd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport class ContactForm extends React.Component {\r\n  state = {\r\n   name: '',\r\n   number: '',\r\n }\r\n \r\n  HandleNameInput=(e)=>{\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  HandleNumberInput=(e)=>{\r\n    this.setState({ number: e.target.value });\r\n  };\r\n  \r\n  FormSubmit = (e) => {\r\n    const { name, number} = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n    }\r\n\r\n \r\n  render() {\r\n  const { name, number } = this.state;\r\n    return (\r\n\r\n      <form onSubmit={this.FormSubmit}>\r\n        <label>Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.HandleNameInput}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required />\r\n        </label>\r\n\r\n        <label >Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.HandleNumberInput}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","export const Filter = ({ onChangeFilter, filter }) => {\r\n  return (\r\n<label> Find contacts by name\r\n        <input\r\n  type=\"text\"\r\n            value={filter}\r\n            onChange={onChangeFilter}\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n/> </label>\r\n  )\r\n} ","export const ContactList = ({ contacts, filter, onClickDelete }) => {\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    filteredContacts.length > 0 && (\r\n      <ul>\r\n        {filteredContacts.map(contact => (\r\n          <li key={contact.id}>\r\n            <p>\r\n              {contact.name}:{contact.number}\r\n            </p>\r\n            <button id={contact.id} type=\"button\" onClick={onClickDelete}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  HandleSearchContactByName = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  HandleFormSubmit = (name, number) => {\n    const { contacts } = this.state;\n    const isInList = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    isInList\n      ? alert(name + ' is already in contacts.')\n      : contacts.push({ name: name, id: uuidv4(), number: number });\n\n    this.setState({ contacts: contacts });\n  };\n\n  HandleClickDelete = e => {\n    const { contacts } = this.state;\n    contacts.forEach((contact, index) => contact.id === e.target.id && contacts.splice(index));\n    this.setState({ contacts: contacts });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={this.HandleFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter onChangeFilter={this.HandleSearchContactByName} filter={filter} />\n        <ContactList filter={filter} contacts={contacts} onClickDelete={this.HandleClickDelete} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}